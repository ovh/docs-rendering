function i(){import("data:text/javascript,")}((r,n)=>{const e={constants:{isSearchingClass:"ods-search-bar--is-searching"},element:{searchBar:document.querySelector("[ods-search-bar]"),searchBarFormInput:null,searchBarFormReset:document.querySelector("[data-search-bar-close]")},methods:{ready:()=>{var s;return e.element.searchBarFormInput=(s=e.element.searchBar)==null?void 0:s.querySelector(".ods-search-bar__form__input"),e.element.searchBar&&e.element.searchBarFormReset&&e.element.searchBarFormInput},initialize:(s,t,a)=>{e.events.isSearching(s,t),e.events.stopSearching(s,t,a)},searchActive:(s,t)=>{t.value.length?s.classList.add(e.constants.isSearchingClass):s.classList.remove(e.constants.isSearchingClass)}},events:{isSearching:(s,t)=>{["keyup","click"].forEach(a=>{t.addEventListener(a,()=>{e.methods.searchActive(s,t)})})},stopSearching:(s,t,a)=>{t.addEventListener("blur",()=>{s.classList.remove(e.constants.isSearchingClass)}),a==null||a.addEventListener("click",()=>{s.classList.remove(e.constants.isSearchingClass)})}},attach:()=>{const{protocol:s,host:t,pathname:a}=window.location;`${s}//${t+a}`!==n.algolia.results_page_url&&e.methods.ready()&&e.methods.initialize(e.element.searchBar,e.element.searchBarFormInput,e.element.searchBarFormReset)}};r.behaviors.odsSearchBar=e})(Drupal,drupalSettings);export{i as __vite_legacy_guard};
